/**
 * TollGuru Calculator
 * TollGuru Calculator API  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 2020-05-31T17:48:12Z
 * Contact: eng@tollguru.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Location from './Location';
import ModelObject from './ModelObject';

/**
* The GmapRequestBody model module.
* @module model/GmapRequestBody
* @version 2020-05-31T17:48:12Z
*/
export default class GmapRequestBody {
    /**
    * Constructs a new <code>GmapRequestBody</code>.
    * @alias module:model/GmapRequestBody
    * @class
    * @param from {module:model/ModelObject} 
    * @param to {module:model/ModelObject} 
    */

    constructor(from, to) {
        
        
        this['from'] = from;
        this['to'] = to;
        
    }

    /**
    * Constructs a <code>GmapRequestBody</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/GmapRequestBody} obj Optional instance to populate.
    * @return {module:model/GmapRequestBody} The populated <code>GmapRequestBody</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GmapRequestBody();
                        
            
            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiClient.convertToType(data['from'], ModelObject);
            }
            if (data.hasOwnProperty('to')) {
                obj['to'] = ApiClient.convertToType(data['to'], ModelObject);
            }
            if (data.hasOwnProperty('waypoints')) {
                obj['waypoints'] = ApiClient.convertToType(data['waypoints'], [Location]);
            }
            if (data.hasOwnProperty('vehicleType')) {
                obj['vehicleType'] = ApiClient.convertToType(data['vehicleType'], ModelObject);
            }
            if (data.hasOwnProperty('departure_time')) {
                obj['departure_time'] = ApiClient.convertToType(data['departure_time'], ModelObject);
            }
            if (data.hasOwnProperty('fuelPrice')) {
                obj['fuelPrice'] = ApiClient.convertToType(data['fuelPrice'], 'Number');
            }
            if (data.hasOwnProperty('fuelPriceCurrency')) {
                obj['fuelPriceCurrency'] = ApiClient.convertToType(data['fuelPriceCurrency'], 'String');
            }
            if (data.hasOwnProperty('fuelEfficiency')) {
                obj['fuelEfficiency'] = ApiClient.convertToType(data['fuelEfficiency'], ModelObject);
            }
            if (data.hasOwnProperty('driver')) {
                obj['driver'] = ApiClient.convertToType(data['driver'], ModelObject);
            }
            if (data.hasOwnProperty('hos')) {
                obj['hos'] = ApiClient.convertToType(data['hos'], ModelObject);
            }
        }
        return obj;
    }

    /**
    * @member {module:model/ModelObject} from
    */
    'from' = undefined;
    /**
    * @member {module:model/ModelObject} to
    */
    'to' = undefined;
    /**
    * @member {Array.<module:model/Location>} waypoints
    */
    'waypoints' = undefined;
    /**
    * @member {module:model/ModelObject} vehicleType
    */
    'vehicleType' = undefined;
    /**
    * @member {module:model/ModelObject} departure_time
    */
    'departure_time' = undefined;
    /**
    * @member {Number} fuelPrice
    * @default 3
    */
    'fuelPrice' = 3;
    /**
    * @member {module:model/GmapRequestBody.FuelPriceCurrencyEnum} fuelPriceCurrency
    * @default 'USD'
    */
    'fuelPriceCurrency' = 'USD';
    /**
    * @member {module:model/ModelObject} fuelEfficiency
    */
    'fuelEfficiency' = undefined;
    /**
    * @member {module:model/ModelObject} driver
    */
    'driver' = undefined;
    /**
    * @member {module:model/ModelObject} hos
    */
    'hos' = undefined;



    /**
    * Allowed values for the <code>fuelPriceCurrency</code> property.
    * @enum {String}
    * @readonly
    */
    static FuelPriceCurrencyEnum = {
        /**
         * value: "USD"
         * @const
         */
        "USD": "USD",
        /**
         * value: "CAD"
         * @const
         */
        "CAD": "CAD",
        /**
         * value: "MXN"
         * @const
         */
        "MXN": "MXN",
        /**
         * value: "INR"
         * @const
         */
        "INR": "INR"    };

}
