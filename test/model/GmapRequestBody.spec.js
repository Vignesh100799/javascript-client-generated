/**
 * TollGuru Calculator
 * TollGuru Calculator API  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 2020-05-31T17:48:12Z
 * Contact: eng@tollguru.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TollGuruCalculator);
  }
}(this, function(expect, TollGuruCalculator) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TollGuruCalculator.GmapRequestBody();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GmapRequestBody', function() {
    it('should create an instance of GmapRequestBody', function() {
      // uncomment below and update the code to test GmapRequestBody
      //var instane = new TollGuruCalculator.GmapRequestBody();
      //expect(instance).to.be.a(TollGuruCalculator.GmapRequestBody);
    });

    it('should have the property from (base name: "from")', function() {
      // uncomment below and update the code to test the property from
      //var instane = new TollGuruCalculator.GmapRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property to (base name: "to")', function() {
      // uncomment below and update the code to test the property to
      //var instane = new TollGuruCalculator.GmapRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property waypoints (base name: "waypoints")', function() {
      // uncomment below and update the code to test the property waypoints
      //var instane = new TollGuruCalculator.GmapRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property vehicleType (base name: "vehicleType")', function() {
      // uncomment below and update the code to test the property vehicleType
      //var instane = new TollGuruCalculator.GmapRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property departureTime (base name: "departure_time")', function() {
      // uncomment below and update the code to test the property departureTime
      //var instane = new TollGuruCalculator.GmapRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property fuelPrice (base name: "fuelPrice")', function() {
      // uncomment below and update the code to test the property fuelPrice
      //var instane = new TollGuruCalculator.GmapRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property fuelPriceCurrency (base name: "fuelPriceCurrency")', function() {
      // uncomment below and update the code to test the property fuelPriceCurrency
      //var instane = new TollGuruCalculator.GmapRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property fuelEfficiency (base name: "fuelEfficiency")', function() {
      // uncomment below and update the code to test the property fuelEfficiency
      //var instane = new TollGuruCalculator.GmapRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property driver (base name: "driver")', function() {
      // uncomment below and update the code to test the property driver
      //var instane = new TollGuruCalculator.GmapRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property hos (base name: "hos")', function() {
      // uncomment below and update the code to test the property hos
      //var instane = new TollGuruCalculator.GmapRequestBody();
      //expect(instance).to.be();
    });

  });

}));
